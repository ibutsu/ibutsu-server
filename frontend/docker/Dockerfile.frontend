# hadolint global ignore=DL3041,DL4006
# Build the image first
FROM registry.access.redhat.com/ubi8/ubi-minimal:8.10 AS builder

ARG NODEJS_VERSION=18
ENV NODE_ENV=production

WORKDIR /app

RUN microdnf module disable nodejs && \
    microdnf module enable nodejs:$NODEJS_VERSION && \
    microdnf install --nodocs -y --disableplugin=subscription-manager \
        nodejs nodejs-nodemon npm findutils tar && \
    node -v | grep -qe "^v$NODEJS_VERSION\." && \
    echo "Found VERSION $NODEJS_VERSION" && \
    microdnf clean all && \
    rm -rf /mnt/rootfs/var/cache/* /mnt/rootfs/var/log/dnf* /mnt/rootfs/var/log/yum.*

COPY . /app

RUN npm install --global yarn@^1.22.22 && yarn install && yarn build

# Deploy it using nginx
FROM registry.access.redhat.com/ubi8/ubi-minimal:8.10

ARG NGINX_VERSION=1.20

# rpm -V $INSTALL_PKGS && \
RUN microdnf -y module enable nginx:$NGINX_VERSION && \
    microdnf install -y --nodocs --disableplugin=subscription-manager \
        nss_wrapper bind-utils gettext hostname nginx nginx-mod-stream nginx-mod-http-perl && \
    nginx -v 2>&1 | grep -qe "nginx/$NGINX_VERSION\." && \
    echo "Found VERSION $NGINX_VERSION" && \
    microdnf clean all && \
    rm -rf /mnt/rootfs/var/cache/* /mnt/rootfs/var/log/dnf* /mnt/rootfs/var/log/yum.*

WORKDIR /app
COPY --from=builder /app/build /app
COPY ./docker/nginx.conf /etc/nginx/nginx.conf
COPY ./docker/docker-entrypoint.sh /usr/bin/docker-entrypoint.sh
RUN chmod +x /usr/bin/docker-entrypoint.sh && \
    chown -R 1001:0 /app /var/lib/nginx /var/log/nginx /run && \
    chmod -R ug+rwX /app /var/lib/nginx /var/log/nginx /run

EXPOSE 8080
ENTRYPOINT ["/usr/bin/docker-entrypoint.sh"]
CMD ["nginx", "-g", "daemon off;"]
