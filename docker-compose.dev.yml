services:
  postgres:
    environment:
      POSTGRES_USER: ibutsu
      POSTGRES_PASSWORD: ibutsu
      POSTGRES_DB: ibutsu
    image: postgres:15
    healthcheck:
      test: [ "CMD-SHELL", "pg_isready -U ibutsu" ]
      interval: 5s
      timeout: 5s
      retries: 5
  redis:
    image: redis:latest

  backend:
    environment:
      - JWT_SECRET=jwtsecret
      - POSTGRESQL_HOST=postgres
      - POSTGRESQL_PORT=5432
      - POSTGRESQL_DATABASE=ibutsu
      - POSTGRESQL_USER=ibutsu
      - POSTGRESQL_PASSWORD=ibutsu
      - CELERY_BROKER_URL=redis://redis:6379
      - CELERY_RESULT_BACKEND=redis://redis:6379
      - IBUTSU_SUPERADMIN_EMAIL=admin@example.com
      - IBUTSU_SUPERADMIN_PASSWORD=admin12345
      - IBUTSU_SUPERADMIN_NAME=Administrator
      - HOME=/mnt
    image: registry.access.redhat.com/ubi8/python-39
    command: >
      /bin/bash -c
        "pip install -U pip setuptools wheel &&
        pip install . &&
        python -m ibutsu_server --host 0.0.0.0"
    working_dir: /mnt
    volumes:
      - "./backend:/mnt:z"
    user: ${UID:-1000}
    ports:
      - "8080:8080"
    depends_on:
      postgres:
        condition: service_healthy
      redis:
        condition: service_started
    healthcheck:
      test: curl --output /dev/null --silent --head --fail http://127.0.0.1:8080/api/health
      interval: 10s
      timeout: 10s
      retries: 5

  worker:
    environment:
      - COLUMNS=80
      - POSTGRESQL_HOST=postgres
      - POSTGRESQL_PORT=5432
      - POSTGRESQL_DATABASE=ibutsu
      - POSTGRESQL_USER=ibutsu
      - POSTGRESQL_PASSWORD=ibutsu
      - CELERY_BROKER_URL=redis://redis:6379
      - CELERY_RESULT_BACKEND=redis://redis:6379
      - HOME=/mnt
    image: registry.access.redhat.com/ubi8/python-39
    command: >
      /bin/bash -c
        "pip install -U pip setuptools wheel &&
        pip install . &&
        ./celery_worker.sh"
    working_dir: /mnt
    volumes:
      - "./backend:/mnt:z"
    user: ${UID:-1000}
    depends_on:
      postgres:
        condition: service_healthy
      redis:
        condition: service_started
      backend:
        condition: service_healthy

  frontend:
    environment:
      NODE_ENV: production
      REACT_APP_SERVER_URL: http://127.0.0.1:8080/api
    image: node:18
    command: >
      /bin/bash -c
        "npm install --no-save --no-package-lock yarn &&
        yarn install &&
        yarn run devserver"
    working_dir: /mnt
    user: "0"
    volumes:
      - "./frontend:/mnt:z"
    ports:
      - "3000:3000"
    depends_on:
      backend:
        condition: service_healthy
